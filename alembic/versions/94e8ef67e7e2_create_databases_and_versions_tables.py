"""Create databases and versions tables

Revision ID: 94e8ef67e7e2
Revises: 
Create Date: 2024-10-16 17:17:12.665523

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '94e8ef67e7e2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('__diesel_schema_migrations')
    op.alter_column('databases', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_databases_id'), 'databases', ['id'], unique=False)
    op.alter_column('versions', 'hash',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('versions', 'database_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('versions', 'parent_hashes',
               existing_type=postgresql.ARRAY(sa.UUID()),
               type_=sa.Text(),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::uuid[]"))
    op.alter_column('versions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_versions_hash'), 'versions', ['hash'], unique=False)
    op.drop_constraint('versions_database_id_fkey', 'versions', type_='foreignkey')
    op.create_foreign_key(None, 'versions', 'databases', ['database_id'], ['id'])
    op.drop_column('versions', 'data')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('versions', sa.Column('data', postgresql.BYTEA(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'versions', type_='foreignkey')
    op.create_foreign_key('versions_database_id_fkey', 'versions', 'databases', ['database_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_versions_hash'), table_name='versions')
    op.alter_column('versions', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('versions', 'parent_hashes',
               existing_type=sa.Text(),
               type_=postgresql.ARRAY(sa.UUID()),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::uuid[]"))
    op.alter_column('versions', 'database_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('versions', 'hash',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_index(op.f('ix_databases_id'), table_name='databases')
    op.alter_column('databases', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_table('__diesel_schema_migrations',
    sa.Column('version', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('run_on', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version', name='__diesel_schema_migrations_pkey')
    )
    # ### end Alembic commands ###
